<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dj Walker on Forestry.io</title>
    <link>https://forestry.io/authors/dj-walker/</link>
    <description>Recent content in Dj Walker on Forestry.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 15 Jun 2018 03:30:13 -1100</lastBuildDate>
    
	<atom:link href="https://forestry.io/authors/dj-walker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>5 Ways to Handle Forms on Your Static Site</title>
      <link>https://forestry.io/blog/5-ways-to-handle-forms-on-your-static-site/</link>
      <pubDate>Fri, 15 Jun 2018 03:30:13 -1100</pubDate>
      
      <guid>https://forestry.io/blog/5-ways-to-handle-forms-on-your-static-site/</guid>
      <description>When I first started exploring the potential of static sites, I was attracted by their speed and simplicity. I knew these benefits came at a cost, however: since static sites can’t run backend code, there are limits to what you can accomplish with a static solution.
I no longer see things this way.
JAMStack is not about sacrificing features for the sake of a performant, easy to maintain website. Rather, it is about re-evaluating how much of your desired functionality should be delegated to your web frontend.</description>
    </item>
    
    <item>
      <title>For Static Sites, There’s No Excuse Not to Use a CDN</title>
      <link>https://forestry.io/blog/for-static-sites-theres-no-excuse-not-to-use-a-cdn/</link>
      <pubDate>Fri, 08 Jun 2018 04:00:11 -1100</pubDate>
      
      <guid>https://forestry.io/blog/for-static-sites-theres-no-excuse-not-to-use-a-cdn/</guid>
      <description>Are you getting the most out of your static site? If you’re not hosting your site on a CDN, you definitely aren’t.
CDNs, or Content Delivery Networks, are commonly used to distribute static resources like images, videos, and client-side code (CSS and JavaScript.) Since a static site is composed entirely of static resources (including the HTML pages,) it is possible to serve the entire website through a CDN!
In this article, we will explore why you should be using a CDN to host your static site, and how you can do it with Netlify.</description>
    </item>
    
    <item>
      <title>Mastering Image Delivery With Cloudinary</title>
      <link>https://forestry.io/blog/master-image-delivery-with-cloudinary/</link>
      <pubDate>Fri, 01 Jun 2018 05:00:49 -1100</pubDate>
      
      <guid>https://forestry.io/blog/master-image-delivery-with-cloudinary/</guid>
      <description>Applying a responsive strategy for displaying images means more than just adding max-width: 100%; to your image tags. You don&amp;rsquo;t want to display an image that is much larger than the area it occupies, otherwise you’re just wasting bits. You need to deliver scaled-down versions of these images where appropriate.
A popular way to generate these scaled-down assets is to automatically resize our images during the build process, using something like a gulp task, but that solution isn&amp;rsquo;t perfect.</description>
    </item>
    
    <item>
      <title>How To Use Hugo&#39;s Image Processing With Forestry</title>
      <link>https://forestry.io/blog/how-to-use-hugo-s-image-processing-with-forestry/</link>
      <pubDate>Mon, 21 May 2018 20:09:02 -1100</pubDate>
      
      <guid>https://forestry.io/blog/how-to-use-hugo-s-image-processing-with-forestry/</guid>
      <description>0.32 update introduced built-in image processing for certain assets. One limitation of this feature is that it only works for page resources, which are page-relative assets stored alongside your posts in the content/ directory of your site. Since Forestry’s uploads are stored in the static/uploads/ directory by default, these assets cannot be resized in your templates using Hugo’s built-in resizer. This document will provide a step-by-step guide for working around this limitation.</description>
    </item>
    
    <item>
      <title>Snipcart Brings E‑Commerce to Your Static Site</title>
      <link>https://forestry.io/blog/snipcart-brings-ecommerce-static-site/</link>
      <pubDate>Fri, 18 May 2018 03:36:07 -1100</pubDate>
      
      <guid>https://forestry.io/blog/snipcart-brings-ecommerce-static-site/</guid>
      <description>Picture this: it&amp;rsquo;s 2018, and your client needs an online store. You know that static sites are great: they&amp;rsquo;re easy to scale, have a minimal attack surface, and are very fast. However, since a static site can&amp;rsquo;t run backend code, it won&amp;rsquo;t be able to do some things necessary for e-commerce, such as process customer orders. Can you really use a static site to operate an e-commerce storefront?
Of course you can!</description>
    </item>
    
    <item>
      <title>Automatically Publish Scheduled Posts For Your Static Site</title>
      <link>https://forestry.io/blog/automatically-publish-scheduled-posts-for-static-site/</link>
      <pubDate>Fri, 04 May 2018 07:10:15 -1100</pubDate>
      
      <guid>https://forestry.io/blog/automatically-publish-scheduled-posts-for-static-site/</guid>
      <description>Part of our mission at Forestry is to dissolve the perceived limitations of static sites. In reality, static sites are easy to understand and integrate with, and the belief that static sites are not capable of feature X is largely a failure of imagination. With a little cleverness and determination, virtually anything is possible on a static platform.
Previously, we showed you how to set up Algolia with Jekyll as well as with Hugo to make your content searchable.</description>
    </item>
    
    <item>
      <title>Instant Production-Ready Scaffolding With Create-Static-Site</title>
      <link>https://forestry.io/blog/instant-production-ready-scaffolding-with-create-static-site/</link>
      <pubDate>Fri, 27 Apr 2018 09:38:55 -1100</pubDate>
      
      <guid>https://forestry.io/blog/instant-production-ready-scaffolding-with-create-static-site/</guid>
      <description>Create React App is a utility provided by the Facebook team in support of the React JavaScript framework. The goal of Create React App is to allow developers to quickly bootstrap a React project without having to spend time sorting out the build pipeline. With over 47,000 stars on Github (over half as many as the actual React library,) Create React App&amp;rsquo;s popularity speaks for itself.
The success and utility of Create React App has inspired the Forestry.</description>
    </item>
    
    <item>
      <title>Sawmill: A Razor-sharp Layout Composer for Hugo and Forestry</title>
      <link>https://forestry.io/blog/sawmill-layout-composer-for-hugo-and-forestry/</link>
      <pubDate>Fri, 20 Apr 2018 06:09:13 -1100</pubDate>
      
      <guid>https://forestry.io/blog/sawmill-layout-composer-for-hugo-and-forestry/</guid>
      <description>When it comes to creating websites, good content strategy is all about turning ideas into HTML with a minimal amount of friction. Whether using a CMS with a web interface or editing content files for a static site generator, content creators need an easy way to create visually interesting and well-structured content.
Every approach is a compromise between flexibility and ease-of-use. Even if a developer could anticipate all of a content creator&amp;rsquo;s needs, these needs will change over time.</description>
    </item>
    
    <item>
      <title>Write Better JavaScript With Webpack</title>
      <link>https://forestry.io/blog/write-better-javascript-with-webpack/</link>
      <pubDate>Fri, 30 Mar 2018 12:00:00 +0000</pubDate>
      
      <guid>https://forestry.io/blog/write-better-javascript-with-webpack/</guid>
      <description>I get it. The JavaScript ecosystem is exhausting. There exists an abundance of tools and frameworks, and each one wants to rescue you from the shortcomings of its peers. Attempting to learn and keep up with these tools takes time and energy that you would rather devote to your project. Reducing cognitive overhead is a core component of Forestry.io&amp;rsquo;s philosophy — we designed a static site CMS that is easy to set up and use.</description>
    </item>
    
    <item>
      <title>CircleCI Followup: Deploying Via rsync</title>
      <link>https://forestry.io/blog/circleci-deploy-via-rsync/</link>
      <pubDate>Thu, 29 Mar 2018 12:00:00 +0000</pubDate>
      
      <guid>https://forestry.io/blog/circleci-deploy-via-rsync/</guid>
      <description>This tutorial was updated on April 3, 2018.
 In last week&amp;rsquo;s article, we showed you how to automate the deployment of a Hugo site using CircleCI. The example we provided used the awscli utility to deploy the results of your build process to an AWS S3 bucket. In this follow-up, we will show you how to use the rsync utility to deploy your site to any rsync-enabled server.</description>
    </item>
    
    <item>
      <title>Automate Your Static Site Deployment with CircleCI</title>
      <link>https://forestry.io/blog/automate-deploy-w-circle-ci/</link>
      <pubDate>Fri, 23 Mar 2018 12:38:35 +0000</pubDate>
      
      <guid>https://forestry.io/blog/automate-deploy-w-circle-ci/</guid>
      <description>This tutorial was updated on April 3, 2018 to use bep/s3deploy in place of aws/aws-cli.
 This article is part of our on-going Frontend Friday modern web development series
Tools like Hugo, Jekyll, and Gatsby have made building static sites a popular and practical choice for developers. One major disadvantage these tools have, however, is the need to regenerate and redeploy their files every time there is new content to publish.</description>
    </item>
    
  </channel>
</rss>